# -*- mode: sh -*-

# clean up files from skel
for filename in .bashrc .dircolors; do
    if ! [ -L ~/$filename ] && [ -f ~/$filename ]; then
	echo "Creating backup of ~/$filename"
	mv ~/$filename ~/$filename.bak
    fi
done


fresh freshshell/fresh bin/fresh --bin

fresh jasoncodes/dotfiles bin/gemdiff --bin=~/bin/gem-diff

fresh bill-auger/git-branch-status git-branch-status --bin

#fresh foobacca/dotfiles bash/dircolors

# get some dircolors
#fresh seebi/dircolors-solarized dircolors.ansi-light --file=~/.dircolors
fresh dircolors --file

if [[ "$(hostname -s)" == "tron" ]]; then
    fresh emacs.tron --file=~/.emacs
elif [[ "$(hostname -s)" == "bard" ]]; then
    fresh emacs.bard --file=~/.emacs
else
    fresh emacs --file
fi

elpackage_path=~/.emacs.d/packages
for elp in json-mode.el json-reformat.el mmm-mako.el debian-startup.el; do
    fresh emacs.d/packages/$elp --file=$elpackage_path/$elp
done

fresh emacsmirror/xml-rpc xml-rpc.el --file=$elpackage_path/xml-rpc.el

fresh weblogger.el --file=$elpackage_path/weblogger.el

mode=coffee-mode
fresh defunkt/$mode $mode.el --file=$elpackage_path/$mode.el
mode=markdown-mode
fresh defunkt/$mode $mode.el --file=$elpackage_path/$mode.el
mode=scss-mode
fresh antonj/$mode $mode.el --file=$elpackage_path/$mode.el
mode=yaml-mode
fresh yoshiki/$mode $mode.el --file=$elpackage_path/$mode.el
mode=jinja2-mode
fresh paradoxxxzero/$mode $mode.el --file=$elpackage_path/$mode.el
mode=nginx-mode
fresh ajc/$mode $mode.el --file=$elpackage_path/$mode.el



fresh umeboshi2/emacs-goodies-el emacs.d/site-start.d --file=~/.emacs.d/site-start.d/
fresh umeboshi2/emacs-goodies-el emacs.d/site-lisp --file=~/.emacs.d/site-lisp/

# get evm
#$ curl -fsSkL https://raw.github.com/rejeep/evm/master/go | bash
if [ -d ~/.evm ]; then
    fresh emacs_daemon.desktop --file=~/.config/autostart/emacs_daemon.desktop
fi

#fresh emacs.d --file=~/.emacs.d/
fresh bashrc --file
fresh xxdiffrc --file
fresh gitconfig --file
fresh gitignore_global --file
fresh garglkrc --file
fresh profile --file
fresh xsessionrc --file


for binfile in `ls ~/.dotfiles/bin | grep -v ~$` ; do
    fresh bin/$binfile --bin
done

# konsole color schemes
if [ -d ~/.kde/share/apps/konsole ]; then
    echo "Konsole directory located..."
    colorschemes="4-s cypress funny golden indian-red khaki orange raspberry"
    colorschemes="$colorschemes workstation zuki"
    for cs in $colorschemes; do
	filepath=~/.kde/share/apps/konsole/$cs.colorscheme
	#fresh konsole/$cs.colorscheme --file=$filepath
	ln -sf ~/.dotfiles/konsole/$cs.colorscheme $filepath
    done
fi

# hosts on forest domain use devvpi on cypress
forest_hosts="pegatron gazebo cypress"
#http://stackoverflow.com/questions/8063228/how-do-i-check-if-a-variable-exists-in-a-list-in-bash
if [[ $forest_hosts =~ "$(hostname -s)" ]]; then
    echo "This is a forest machine"
    fresh pip.conf.cypress --file=~/.pip/pip.conf
    fresh pydistutils.cfg.cypress --file=~/.pydistutils.cfg
fi

# laptop hosts use local devpi
laptop_hosts="bard"
if [[ $laptop_hosts =~ "$(hostname -s)" ]]; then
    echo "This is a laptop machine"
    fresh pip.conf.bard --file=~/.pip/pip.conf
    fresh pydistutils.cfg.bard --file=~/.pydistutils.cfg
fi

# this is gkrellm and konsole configs for
# certain hosts on forest domain.  Not used anymore.
if false ; then
forest_hosts="pegatron gazebo bard"
#if [[ "$(hostname -s)" == "pegatron" ]]; then
if [[ $forest_hosts =~ "$(hostname -s)" ]]; then
    echo "This is a forest machine"
    #fresh pip.conf.cypress --file=~/.pip/pip.conf
    #fresh pydistutils.cfg.cypress --file=~/.pydistutils.cfg
    # get stuff from cypress
    cypress_repo=ssh://cypress.littledebian.org/freespace/repos/git/dotfiles-umeboshi.git
    for host in cypress stopgap mybooklive; do
	fname=autostart/gkrellm-$host.desktop
	fresh $cypress_repo gkrellm/$fname --file=~/.config/$fname
    done
    konsolepath=~/.kde/share/apps/konsole
    for profile in bard cypress gobo justice labrat paperboy raspberry zuki; do
	fname=$profile.profile
	fresh $cypress_repo konsole-pegatron/$fname --file=$konsolepath/$fname
    done
fi
fi

# should we use fresh to manage these configs,
# or create a script that will maintain a configured state
# yet allow for mods from desktop manager?
xfconf=~/.config/xfce4/xfconf
perchannel=$xfconf/xfce-perchannel-xml
fresh xfce4/xfce4-keyboard-shortcuts.xml --file=$perchannel/xfce4-keyboard-shortcuts.xml

# hooks for virtualenvwrapper
fresh virtualenvs/postmkvirtualenv --file=~/.virtualenvs/postmkvirtualenv
fresh virtualenvs/postactivate --file=~/.virtualenvs/postactivate
fresh virtualenvs/predeactivate --file=~/.virtualenvs/predeactivate


# rbenv
if ! [ -d ~/.rbenv ]; then
    git clone https://github.com/sstephenson/rbenv.git ~/.rbenv
    git clone https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
    . .bashrc
    rbenv install 2.1.5
fi


# btrfs-defrag script
fresh https://gist.github.com/b5cac22b6164b14aa967.git defrag-btrfs.sh --bin=/usr/local/bin/defrag-btrfs 


# FIXME
